{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { createContext, useCallback, useContext } from 'react';\nimport { collection, getDocs } from 'firebase/firestore/lite';\nimport { firebaseDb } from \"../config/firebase\";\nexport var FirebaseDBContext = createContext();\nexport function FirebaseDBProvider(props) {\n  var children = props.children;\n  var getQuestions = useCallback(function _callee() {\n    var questionsCol, questionSnapshot, questionList;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            questionsCol = collection(firebaseDb, 'questions');\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getDocs(questionsCol));\n\n          case 3:\n            questionSnapshot = _context.sent;\n            questionList = questionSnapshot.docs.map(function (doc) {\n              return doc.data();\n            });\n            return _context.abrupt(\"return\", questionList);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  return React.createElement(FirebaseDBContext.Provider, {\n    value: {\n      getQuestions: getQuestions\n    }\n  }, children);\n}\nexport function useFirebaseDB() {\n  var context = useContext(FirebaseDBContext);\n\n  if (context === undefined) {\n    throw new Error('useFirebaseDB must be used inside FirebaseDBProvider');\n  }\n\n  return context;\n}","map":{"version":3,"names":["React","createContext","useCallback","useContext","collection","getDocs","firebaseDb","FirebaseDBContext","FirebaseDBProvider","props","children","getQuestions","questionsCol","questionSnapshot","questionList","docs","map","doc","data","useFirebaseDB","context","undefined","Error"],"sources":["/Users/autumn/private/partnerCardQuizz/providers/FirebaseDBProvider.js"],"sourcesContent":["import React, { createContext, useCallback, useContext } from 'react';\nimport { collection, getDocs } from 'firebase/firestore/lite';\nimport { firebaseDb } from '../config/firebase';\n\nexport const FirebaseDBContext = createContext();\n\nexport function FirebaseDBProvider(props) {\n  // modal JSX to pop\n  const { children } = props;\n\n  const getQuestions = useCallback(async () => {\n    const questionsCol = collection(firebaseDb, 'questions');\n    const questionSnapshot = await getDocs(questionsCol);\n    const questionList = questionSnapshot.docs.map(doc => doc.data());\n    return questionList;\n  }, []);\n\n  return (\n    <FirebaseDBContext.Provider\n      value={{\n        getQuestions,\n      }}\n    >\n      {children}\n    </FirebaseDBContext.Provider>\n  );\n}\n\n// shortcut hook\nexport function useFirebaseDB() {\n  const context = useContext(FirebaseDBContext);\n  if (context === undefined) {\n    throw new Error('useFirebaseDB must be used inside FirebaseDBProvider');\n  }\n\n  return context;\n}\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,WAA/B,EAA4CC,UAA5C,QAA8D,OAA9D;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,yBAApC;AACA,SAASC,UAAT;AAEA,OAAO,IAAMC,iBAAiB,GAAGN,aAAa,EAAvC;AAEP,OAAO,SAASO,kBAAT,CAA4BC,KAA5B,EAAmC;EAExC,IAAQC,QAAR,GAAqBD,KAArB,CAAQC,QAAR;EAEA,IAAMC,YAAY,GAAGT,WAAW,CAAC;IAAA;IAAA;MAAA;QAAA;UAAA;YACzBU,YADyB,GACVR,UAAU,CAACE,UAAD,EAAa,WAAb,CADA;YAAA;YAAA,iCAEAD,OAAO,CAACO,YAAD,CAFP;;UAAA;YAEzBC,gBAFyB;YAGzBC,YAHyB,GAGVD,gBAAgB,CAACE,IAAjB,CAAsBC,GAAtB,CAA0B,UAAAC,GAAG;cAAA,OAAIA,GAAG,CAACC,IAAJ,EAAJ;YAAA,CAA7B,CAHU;YAAA,iCAIxBJ,YAJwB;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAD,EAK7B,EAL6B,CAAhC;EAOA,OACE,oBAAC,iBAAD,CAAmB,QAAnB;IACE,KAAK,EAAE;MACLH,YAAY,EAAZA;IADK;EADT,GAKGD,QALH,CADF;AASD;AAGD,OAAO,SAASS,aAAT,GAAyB;EAC9B,IAAMC,OAAO,GAAGjB,UAAU,CAACI,iBAAD,CAA1B;;EACA,IAAIa,OAAO,KAAKC,SAAhB,EAA2B;IACzB,MAAM,IAAIC,KAAJ,CAAU,sDAAV,CAAN;EACD;;EAED,OAAOF,OAAP;AACD"},"metadata":{},"sourceType":"module"}